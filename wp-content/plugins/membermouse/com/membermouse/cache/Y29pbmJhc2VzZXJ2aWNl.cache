/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 * 
 * MM_CoinbaseService handles handles bitcoin transactions and notifications made via Coinbase
 * 
 */

class MM_CoinbaseService extends MM_PaymentService
{
	protected $token = "COINBASE";
	
	//coinbase order/payment statuses
	public static $ORDER_STATUS_COMPLETED = "completed";
	public static $ORDER_STATUS_MISPAID = "mispaid";
	public static $ORDER_STATUS_EXPIRED = "expired";
	public static $ORDER_STATUS_CANCELED = "canceled";
	public static $RECURRING_PAYMENT_STATUS_ACTIVE = "active";
	public static $RECURRING_PAYMENT_STATUS_PAUSED = "paused";
	public static $RECURRING_PAYMENT_STATUS_CANCELED = "canceled";
	
	//api configuration fields
	protected $apiKey  = "";
	protected $apiSecret  = "";
	
	//TODO: REFACTOR: NEVER SHIP TO PRODUCTION WITH $skipValidation AS TRUE; FOR LOCAL TESTING ONLY!
	private $skipValidation = false;
	private $allowOrderCreation = false;
	
	//set threshold of when ipns should be logged to database
	//all false is maximum effiency (less db writes) and
	//all true is maximum safety (awareness of hack attempts, better debugging if coinbase changes format, etc)
	private $logUnauthorizedIPNs = true;
	private $logInvalidIPNs = true;
	private $logDuplicateIPNs = false;
	
	//could in the future support all currencies listed here: https://coinbase.com/api/v1/currencies
	//but this would require adapting ipn handling to make sure it could handle currectly
	//(right now we assume that order->total_native->cents/100 = payment total)
	//also would need to make validateOrder, which ensures no order is less than $1.00 USD,
	//able to calculate correctly for other currencies
	protected $supportedCurrencies = array("USD");
	
	public function loadDependencies()
	{
		require_once(MM_LIB_DIR."/coinbase/Coinbase.php");
	}

	public function getAPIKey()
	{
		return $this->apiKey;
	}

	public function setAPIKey($apiKey)
	{
		$this->apiKey = $apiKey;
	}

	public function getAPISecret()
	{
		return $this->apiSecret;
	}

	public function setAPISecret($apiSecret)
	{
		$this->apiSecret = $apiSecret;
	}
	

	public function install()
	{
		global $wpdb;
		
		parent::install();
		
		//purpose of this table is to log every incoming ipn transaction
		$sql[] = "CREATE TABLE ".MM_TABLE_COINBASE_IPN_LOG." (\n".
				"id bigint(20) NOT NULL AUTO_INCREMENT,\n".
				"button_id varchar(48),\n".
				"button_type varchar(24),\n".
				"ipn_transaction_id varchar(48),\n".
				"ipn_type varchar(24) NOT NULL,\n".
				"ipn_content text NOT NULL,\n".
				"ipn_status varchar(24) NOT NULL,\n".
				"error CHAR(0) NULL, \n".
				"received datetime NOT NULL,\n".
				"PRIMARY KEY  (id)\n".
				")";
		
		//purpose of this table is to link every coinbase "recurring_payment" (subscription) with a mm order item
		//(not actively queried but important if ever needing to debug a subscription gone awry)
		$sql[] = "CREATE TABLE ".MM_TABLE_COINBASE_SUBSCR_LINKS." (\n".
				"recurring_payment_id varchar(32) NOT NULL,\n".
				"order_item_id bigint(20) NOT NULL,\n".
				"PRIMARY KEY  (recurring_payment_id,order_item_id)\n".
				")";
		
		//purpose of this table is to make a 1:1 link of every coinbase "button" (unique checkout) with a mm order
		//(essential for associating "order" and "recurring_payment" ipns which each other)
		$sql[] = "CREATE TABLE ".MM_TABLE_COINBASE_BUTTON_LINKS." (\n".
				"button_id varchar(32) NOT NULL,\n".
				"order_id bigint(20) NOT NULL,\n".
				"PRIMARY KEY  (button_id,order_id)\n".
				")";

		foreach ($sql as $query)
		{
			dbdelta($query);
		}
		
	}


	/**
	 * Used to report what features the Coinbase Service supports
	 * @see MM_PaymentService::supportsFeature()
	 * 
	 * @param $featureConst a const as defined in MM_PaymentServiceFeatures
	 * @return boolean true if supported, false if not supported
	 */
	public function supportsFeature($featureConst)
	{
		$supported[] = MM_PaymentServiceFeatures::OFFSITE_SERVICE;
		return in_array($featureConst,$supported,true);
	}

	
	#########################################
	# ADMIN
	#########################################

	/**
	 * Returns the html that will be used on the payment method settings screen for configuring Coinbase
	 * @see MM_PaymentService::displayConfigOptions()
	 * 
	 * @return String containing the configuration dialog html
	 */
	public function displayConfigOptions()
	{
		$config_options = MM_TEMPLATE::generate("{$this->getTemplateDir()}/coinbase_config.html.php",$this);
		return $config_options;
	}


	/**
	 * Validates and configures the object with the settings information generated by submission of the configuration dialog
	 * @see MM_PaymentService::processConfigOptions()
	 *
	 * @param $post array containing the data posted from the payment methods settings screen
	 * @return An MM_Response of type MM_Response::SUCCESS indicating successful validation and assigment. On error, the type will be MM_Response::ERROR and the message will contain the error messages
	 */
	public function processConfigOptions($post)
	{
		$active = isset($post['offsite_payment_services']) && in_array(strtolower($this->getToken()), $post['offsite_payment_services']);
		$this->setActive($active);
		if ($active)
		{
			$this->install();
			$config = isset($post['payment_service']['coinbase'])?$post['payment_service']['coinbase']:array();
			
			$config['api_key'] = !empty($config['api_key'])?$config['api_key']:"";
			$config['api_secret'] = !empty($config['api_secret'])?$config['api_secret']:"";
			
			//validate configuration - must not be empty and must not return auth error from Coinbase
			if (empty($config['api_key']) || empty($config['api_secret']))
			{
				return new MM_Response("Coinbase Configuration Error: Both API credentials must be filled out in order to use the Coinbase payment method.",MM_Response::$ERROR);
			}
			try
			{
				$testAPI = Coinbase::withApiKey($config['api_key'], $config['api_secret'])->createButton('test','1.00','USD');	
			}
			catch(Exception $e)
			{
				return new MM_Response("Coinbase denied access for those API credentials. Please make sure your merchant account has been activated and that you gave \"buttons\" permissions when you created that API key.",MM_Response::$ERROR); 
			}
			
			$this->setAPIKey($config['api_key']);
			$this->setAPISecret($config['api_secret']);
		}
		return new MM_Response();
	}


	#########################################
	# PAYMENT / CHECKOUT 
	#########################################
	
	public function validateOrder(MM_Order $order)
	{
		$orderItems = $order->getProducts();		
		$recurringItems = array_filter($orderItems,create_function('$i','return $i->isRecurring();'));
		$total = $order->getTotal();
		$item = reset($orderItems);
		
		//don't allow empty order
		if (empty($orderItems))
		{
			return new MM_PaymentServiceResponse("Cannot purchase empty order.",MM_PaymentServiceResponse::$ERROR);		
		}
		//don't allow multiple subscriptions or mix of sub/single payment
		if (count($recurringItems)>1 || (!empty($recurringItems) && count($orderItems)!=count($recurringItems)))
		{
			return new MM_PaymentServiceResponse("If a subscription is being purchased, that must be the only item in the order",MM_PaymentServiceResponse::$ERROR);
		}
		//require supported currencies
		if (!in_array($order->getCurrency(),$this->supportedCurrencies))
		{
			return new MM_PaymentServiceResponse($order->getCurrency()." as order currency is unsupported for Coinbase payments.",MM_PaymentServiceResponse::$ERROR);
		}
		//coinbase does not allow orders less that about $0.75 USD 
		if ($total > 0 && $total < 0.75)
		{
			return new MM_PaymentServiceResponse("Coinbase order total cannot be less than $0.75 USD.",MM_PaymentServiceResponse::$ERROR);
		}	
		//coinbase does not support trials
		if ($item->getTrialDuration() > 0)
		{
			return new MM_PaymentServiceResponse("Coinbase does not support free or paid trials.",MM_PaymentServiceResponse::$ERROR);
		}
		//coinbase only supports a fixed set of billing intervals
		if ($item->isRecurring() && $this->getCoinbaseInterval($item->getRebillPeriod(), $item->getRebillFrequency())==false)
		{
			return new MM_PaymentServiceResponse("Coinbase only supports daily, weekly, biweekly, monthly, quarterly, or yearly billing intervals.",MM_PaymentServiceResponse::$ERROR);
		}	
		//coinbase does not support max rebills
		if ($item->isRecurring() && !is_null($item->getMaxRebills()) && $item->getMaxRebills()!=0)
		{
			return new MM_PaymentServiceResponse("Coinbase does not support limits on number of payments.",MM_PaymentServiceResponse::$ERROR);
		}
		//no errors
		return new MM_PaymentServiceResponse();
	}
	
	public function displayPaymentForm(MM_Order $order)
	{
		$checkoutUrl = $this->getCoinbasePurchaseUrl($order);
		$html = MM_TEMPLATE::generate("{$this->getTemplateDir()}/coinbase_payment_form.html.php",$checkoutUrl);
		return $html;
	}

	/*
	 * Returns a URL that can be used as a link to initiate a Coinbase purchase, ie. a one-click-buy link
	 * 
	 * @param MM_Order $order The order being used to generate the link
	 * @return boolean|string false on error, the purchase link (as a string) on success
	 */	
	protected function getCoinbasePurchaseUrl(MM_Order $order){
		$checkoutRequest = $this->getCoinbaseCheckoutCode($order);
		return (!MM_PaymentServiceResponse::isError($checkoutRequest) && !empty($checkoutRequest->message))? "https://coinbase.com/checkouts/$checkoutRequest->message" : false;
	}

	/**
	 * Fetches a unique checkout code ( or "button id") from the Coinbase API
	 * 
	 * @param MM_Order $order for the order which is being purchased
	 * @return MM_ServiePaymentResponse with message containing a unique Coinbase checkout code if successful, false if not
	 */
	 protected function getCoinbaseCheckoutCode(MM_Order $order){
	 	global $wpdb;
		$orderItems = $order->getProducts();
		$recurringItems = array_filter($orderItems,create_function('$i','return $i->isRecurring();'));

		try
		{
			$coinbase = Coinbase::withApiKey($this->getAPIKey(),$this->getAPISecret());
			$item = reset($orderItems);
			$product =  new MM_Product($item->getItemId());
			//SUBSCRIPTION
			//assuming if a recurring item present, it is the only one
			//1 item per subscription order is enforced in validateOrder()
			if (!empty($recurringItems))
			{
				$request = $coinbase->createButton(
					$product->getName(),
					$order->getTotal(),
					$order->getCurrency(),
					$order->getId()."|".wp_hash("coinbase_ipn_auth_order_".$order->getId()),
					array(
						'style' => 'none',
						'type' => 'subscription',
						'repeat' => $this->getCoinbaseInterval($item->getRebillPeriod(),$item->getRebillFrequency()),
						'success_url' => home_url()."?mm_coinbase_redirect=".urlencode(MM_AccessControlEngine::getConfirmationUrlForOrder($order)),
						'cancel_url' => home_url()."?mm_coinbase_redirect=".urlencode(mm_purchase_link(array("productId"=>$product->getId()))),
						'auto_redirect' => true
					)
				);
			}
			//ONE-TIME PAYMENT / BUNDLE
			//multiple items are allowed here
			else{
				$request = $coinbase->createButton(
					(
					(count($orderItems)>1))? "Order no. ".$order->getOrderNumber() : $product->getName(),
					$order->getTotal(),
					$order->getCurrency(),
					$order->getId()."|".wp_hash("coinbase_ipn_auth_order_".$order->getId()),
					array(
						'style' => 'none',
						'type' => 'buy_now',
						'success_url' => home_url()."?mm_coinbase_redirect=".urlencode(MM_AccessControlEngine::getConfirmationUrlForOrder($order)),
						'cancel_url' => home_url()."?mm_coinbase_redirect=".urlencode(mm_purchase_link(array("productId"=>$product->getId()))),
						'auto_redirect' => true
					)
				);
			}
			if (!isset($request->button->code))
			{
				throw new Exception("No checkout button id returned");
			}
			$buttonId = $request->button->code;
		}
		catch(Exception $e)
		{
			$f = fopen(ABSPATH.'coinbase.log','a+');
			fwrite($f,date('m.d.Y h:i:s')."\n\t".get_class($e).": ".print_r($e->getMessage(),true)."\n");
			fclose($f);
			return new MM_PaymentServiceResponse("Coinbase API error:".$e->getMessage(),MM_PaymentServiceResponse::$ERROR);
		}
		
		//link this Coinbase button to this MM order so we can associate later IPN's with an order
		$buttonOrderLinkData = array(
			"button_id" => $buttonId,
			"order_id" => $order->getId()
		);
		$buttonOrderLink = $wpdb->get_row($wpdb->prepare("SELECT * FROM ".MM_TABLE_COINBASE_BUTTON_LINKS." WHERE order_id=%d",$order->getId()));
		if (is_null($buttonOrderLink))
		{
			$wpdb->insert(MM_TABLE_COINBASE_BUTTON_LINKS,$buttonOrderLinkData);
		}
		else
		{
			$wpdb->update(MM_TABLE_COINBASE_BUTTON_LINKS,$buttonOrderLinkData,array('order_id'=>$order->getId()));
		}
		return new MM_PaymentServiceResponse($buttonId);
	 }


	/**
	 * Takes MemberMouse units for recurring intervals and converts to Coinbase units.
	 * Coinbase takes daily, weekly, every_two_weeks, monthly, quarterly, and yearly
	 * 
	 * @param integer $numUnits
	 * @param string $unitName 
	 * @return boolean false on invalid input, otherwise a string containing the Coinbase interval name
	 */
	protected function getCoinbaseInterval($numUnits, $unitName)
	{		
		if ($numUnits==1 && $unitName=='days')
		{
			return 'daily';
		}
		elseif (($numUnits==1 && $unitName=='weeks') || ($numUnits==7 && $unitName=='days'))
		{
			return 'weekly';
		}
		elseif (($numUnits==2 && $unitName=='weeks') || ($numUnits==14 && $unitName=='days'))
		{
			return 'every_two_weeks';
		}
		elseif ($numUnits==1 && $unitName=='months')
		{
			return 'monthly';
		}
		elseif ($numUnits==3 && $unitName=='months')
		{
			return 'quarterly';
		}
		elseif ($numUnits==1 && $unitName=='years')
		{
			return 'yearly';
		}

		return false;
	}	


	#########################################
	# IPN
	#########################################
	
	/**
	 * Processes IPN notifications
	 * @see MM_PaymentService::processNotification()
	 * 
	 * @param $request array containing the IPN variables, generally a copy of the $_POST
	 * @return MM_PaymentServiceResponse indicating success or failure processing the IPN
	 */
	public function processNotification($request)
	{
		global $wpdb;
		$request = json_decode(file_get_contents('php://input'));

		//handle possible errors and save log
		if (!isset($_REQUEST['hash']) || $_REQUEST['hash'] != wp_hash('coinbase_ipn_auth'))
		{
			if ($this->logUnauthorizedIPNs==true) $this->logIPN($request);
			return new MM_PaymentServiceResponse("Invalid global auth hash received for Coinbase IPN",MM_PaymentServiceResponse::$ERROR);	
		}
		if (!isset($request->order->custom) && !isset($request->recurring_payment->custom))
		{
			if ($this->logUnauthorizedIPNs==true) $this->logIPN($request);
			return new MM_PaymentServiceResponse("No order-specific auth hash received in custom parameter slot for Coinbase IPN",MM_PaymentServiceResponse::$ERROR);	
		}
		else{
			$custom = isset($request->order->custom)? $request->order->custom : $request->recurring_payment->custom;
			$custom_data = explode('|',$custom);
			$custom_id = reset($custom_data);
			$custom_hash = end($custom_data);
			if($custom_hash != wp_hash("coinbase_ipn_auth_order_{$custom_id}")){
				if ($this->logUnauthorizedIPNs==true) $this->logIPN($request);
				return new MM_PaymentServiceResponse("Invalid order-specific auth hash received in custom parameter slot for Coinbase IPN",MM_PaymentServiceResponse::$ERROR);	
			}
		}
		if (is_null($request) || empty($request) || (!isset($request->order->id) && !isset($request->recurring_payment->id)))
		{
			if ($this->logInvalidIPNs==true) $this->logIPN($request);
			return new MM_PaymentServiceResponse("Invalid or empty JSON received in Coinbase IPN",MM_PaymentServiceResponse::$ERROR);	
		}
		if( $this->isDuplicateIPN($request) )
		{
			if ($this->logDuplicateIPNs==true) $this->logIPN($request);
			return new MM_PaymentServiceResponse("Duplicate Coinbase IPN detected",MM_PaymentServiceResponse::$ERROR);
		}
		$ipnId = $this->logIPN($request);
		
		//attempt to look up order and order item based on Coinbase button id
		$buttonId = (isset($request->order->button->id))? $request->order->button->id : $request->recurring_payment->button->id;
		$orderId = $wpdb->get_var($wpdb->prepare("SELECT order_id FROM ".MM_TABLE_COINBASE_BUTTON_LINKS." WHERE button_id=%s",$buttonId));
		$order = new MM_Order($orderId);
		if (!$order->isValid())
		{
			return new MM_PaymentServiceResponse("No matching order found for Coinbase IPN",MM_PaymentServiceResponse::$ERROR);
		}
		$orderItems = $order->getProducts();
		//get item data for single-item-recurring orders
		//we're counting on the fact that validateOrder didn't let any mixed recurring/non-recurring or multiple recurring orders get through
		$isSubscriptionPayment = count($orderItems)==1 && reset($orderItems)->isRecurring();
		$orderItem = reset($orderItems);
		$orderItemId = $orderItem->getId();

		//handle single payments
		//1. non-recurring purchases
		//2. recurring bitcoin w/o coinbase account
		//3. single payment as part of recurring payment
		if (isset($request->order))
		{
			//handle failed payments
			if ($request->order->status==MM_CoinbaseService::$ORDER_STATUS_CANCELED)
			{
				foreach ($orderItems as $revokeItem)
				{
					$revokeResponse = MM_AccessControlEngine::revokeAccessForOrderItem($revokeItem);
					if ($revokeItem->isRecurring())
					{					
						$revokeItem->setStatus(MM_OrderItem::$STATUS_RECURRING_REBILL_FAILED);
						$revokeItem->commitData();
					}
					$coinbaseReason = isset($request->order->cancellation_reason)? $request->order->cancellation_reason : "No reason provided by Coinbase.";
					return new MM_PaymentServiceResponse("Coinbase payment failed. $coinbaseReason",MM_PaymentServiceResponse::$FAILED);
				}
			}
			//handle mispayments (can occur when paying from a non-Coinbase wallet)
			if ($request->order->status==MM_CoinbaseService::$ORDER_STATUS_MISPAID)
			{
				$underpaidAmount = $request->order->total_btc->cents - $request->order->mispaid_btc->cents;
				$user = $order->getCustomer();
				$employee = MM_Employee::getDefault();
				$context = new MM_Context($user, $employee, $order);		
				//if it was overpaid, let admin know treat it as successful
				if ($underpaidAmount <= 0)
				{				
	 				$email = new MM_Email();
					$email->setContext($context);
					$email->setSubject("Coinbase overpayment notfication");
					$email->setBody("This notification is to alert you that the user ".$order->getCustomer()->getUsername()." overpaid for order no. ".$order->getOrderNumber()." by ".($underpaidAmount/-100000000)." BTC. If you wish to refund their overpayment, you'll need to contact them for their bitcoin wallet address.");
					$email->setToAddress($employee->getEmail());
					$email->setFromName($employee->getDisplayName());
					$email->setFromAddress($employee->getEmail());
					$email->send();
					// set status to completed so it will fall through and grant access
					$request->order->status = MM_CoinbaseService::$ORDER_STATUS_COMPLETED;
				}
				//if it was underpaid, let user and admin know and don't give access
				else
				{		
					$email = new MM_Email();
					$email->setContext($context);
					$email->setSubject("We didn't receive enough payment for your [MM_Order_Data name='productName'] purchase");
					$email->setBody("Hello [MM_Member_Data name='firstName'],\n\n Sorry - the amount you sent via bitcoin was ".($underpaidAmount/100000000)." BTC less than the order total. You'll need to check out again and make full payment in order to receive membership access (you can get a refund on the ".($request->order->mispaid_btc->cents/100000000)." BTC you already paid by replying with the bitcoin wallet address you'd like the refund sent to). \n\n Thank you!\n [MM_Employee_Data name='displayName']");
					$email->setToName($user->getFirstName());
					$email->setToAddress($user->getEmail());
					$email->setFromName($employee->getDisplayName());
					$email->setFromAddress($employee->getEmail());
					$email->send();
					
	 				$email = new MM_Email();
					$email->setContext($context);
					$email->setSubject("Coinbase underpayment notfication");
					$email->setBody("This notification is to alert you that the user ".$order->getCustomer()->getUsername()." underpaid for order no. ".$order->getOrderNumber()." by ".($underpaidAmount/100000000)." BTC. They were not granted access and have been notified that they need to resend payment in full and send you their bitcoin wallet address if they want to receive a refund on the ".($request->order->mispaid_btc->cents/100000000)." BTC they already paid.");
					$email->setToAddress($employee->getEmail());
					$email->setFromName($employee->getDisplayName());
					$email->setFromAddress($employee->getEmail());
					$email->send();
					return new MM_PaymentServiceResponse("Coinbase payment received was less than order total.",MM_PaymentServiceResponse::$FAILED);
				}
			}
			//handle expired payments (can occur when paying from a non-Coinbase wallet)
			if ($request->order->status==MM_CoinbaseService::$ORDER_STATUS_EXPIRED)
			{
				$underpaidAmount = $request->order->total_btc->cents - $request->order->mispaid_btc->cents;
				$user = $order->getCustomer();
				$employee = MM_Employee::getDefault();
				$context = new MM_Context($user, $employee, $order);		
				//if it was paid correctly, let admin know and treat it as successful
				if ($underpaidAmount <= 0)
				{				
					$email = new MM_Email();
					$email->setContext($context);
					$email->setSubject("Coinbase overpayment notfication");
					$email->setBody("This notification is to alert you that the user ".$order->getCustomer()->getUsername()." sent a bitcoin payment for order no. ".$order->getOrderNumber()." which was not confirmed until after the Coinbase transaction had expired. Their payment appeared to be in the correct amount and successful though, so they have been granted access. You may wish to verify that the bitcoin deposit was indeed received as expected.");
					$email->setToAddress($employee->getEmail());
					$email->setFromName($employee->getDisplayName());
					$email->setFromAddress($employee->getEmail());
					$email->send();
					// set status to completed so it will fall through and grant access
					$request->order->status = MM_CoinbaseService::$ORDER_STATUS_COMPLETED;
				}
				//if it was underpaid, let user and admin know and don't give access
				else
				{		
					$email = new MM_Email();
					$email->setContext($context);
					$email->setSubject("We didn't receive enough payment for your [MM_Order_Data name='productName'] purchase");
					$email->setBody("Hello [MM_Member_Data name='firstName'],\n\n Sorry - the amount you sent via bitcoin was ".($underpaidAmount/100000000)." BTC less than the order total. You'll need to check out again and make full payment in order to receive membership access (you can get a refund on the ".($request->order->mispaid_btc->cents/100000000)." BTC you already paid by replying with the bitcoin wallet address you'd like the refund sent to). \n\n Thank you!\n [MM_Employee_Data name='displayName']");
					$email->setToName($user->getFirstName());
					$email->setToAddress($user->getEmail());
					$email->setFromName($employee->getDisplayName());
					$email->setFromAddress($employee->getEmail());
					$email->send();
					
	 				$email = new MM_Email();
					$email->setSubject("Coinbase underpayment notfication");
					$email->setBody("This notification is to alert you that the user ".$order->getCustomer()->getUsername()." underpaid for order no. ".$order->getOrderNumber()." by ".($underpaidAmount/100000000)." BTC. They were not granted access and have been notified that they need to resend payment in full and send you their bitcoin wallet address if they want to receive a refund on the ".($request->order->mispaid_btc->cents/100000000)." BTC they already paid.");
					$email->setToAddress($employee->getEmail());
					$email->setFromName($employee->getDisplayName());
					$email->setFromAddress($employee->getEmail());
					$email->send();
					return new MM_PaymentServiceResponse("Coinbase payment received was less than order total.",MM_PaymentServiceResponse::$FAILED);
				}
			}
			//handle succesful payments
			if ($request->order->status==MM_CoinbaseService::$ORDER_STATUS_COMPLETED)
			{
				$numberOfBillings = count($wpdb->get_results($wpdb->prepare("SELECT * FROM ".MM_TABLE_COINBASE_IPN_LOG." WHERE ipn_type='order' AND button_id=%s",$request->order->button->id)));
				
				//handle access for subscription payments
				if ($isSubscriptionPayment)
				{
					if ($numberOfBillings <= 1 || $orderItem->getStatus() != MM_OrderItem::$STATUS_RECURRING)
					{
						$orderItem->setStatus(MM_OrderItem::$STATUS_RECURRING);
						$orderItem->commitData();
						$accessResponse = MM_AccessControlEngine::assignAccessFromOrder($order);
					}
				}
				//handle access for non-subscription payments (e.g. bundles)
				else{
					$accessResponse = MM_AccessControlEngine::assignAccessFromOrder($order);
				}
				//log transaction
				$transaction = array(
					"item_id" => ( count($orderItems)==1? $orderItemId : null ),
					"type" => ( $isSubscriptionPayment? MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT : MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT ),
					"description" => ($numberOfBillings>1?"Recurring payment":"Payment") ." for order# {$order->getOrderNumber()}",
					"amount" => $request->order->total_native->cents/100,
					"isRebill" => ( $numberOfBillings > 1 )
				);
				$transactionLogResponse = MM_TransactionLog::createTransactionEntry($order->getId(), $transaction['item_id'], $transaction['amount'], $order->getCurrency(), $transaction['description'], $transaction['type'], $transaction['isRebill'], $this->getId(), $ipnId);
				return new MM_PaymentServiceResponse($transactionLogResponse->message,($transactionLogResponse->type == MM_Response::$SUCCESS)?MM_PaymentServiceResponse::$SUCCESS:MM_PaymentServiceResponse::$ERROR);
			}
			//neither completed or canceled status - this shouldn't ever happen
			return new MM_PaymentServiceResponse("Unrecognized Coinbase order status", MM_PaymentServiceResponse::$ERROR);			
		}
		
		//handle recurring payments
		elseif (isset($request->recurring_payment))
		{			
			$member = $order->getCustomer();
			switch ($request->recurring_payment->status)
			{
				case MM_CoinbaseService::$RECURRING_PAYMENT_STATUS_ACTIVE:
					//could be new, or paused and then continued, so insert ignore makes sure we won't get duplicate links
					$wpdb->query($wpdb->prepare("INSERT IGNORE INTO ".MM_TABLE_COINBASE_SUBSCR_LINKS." (recurring_payment_id,order_item_id) VALUES(%s,%d)",$request->recurring_payment->id,$orderItemId));
					$member->commitData();
					//we don't have to handle order access here because that will be handled above by the order ipn accompanying this 
					break;
				case MM_CoinbaseService::$RECURRING_PAYMENT_STATUS_PAUSED:
					//revoke order access here since no order ipn will be coming to say no payment was made,
					//and mm will still allow access for paused account
					$revokeResponse = MM_AccessControlEngine::revokeAccessForOrderItem($orderItem);
					break;
				case MM_CoinbaseService::$RECURRING_PAYMENT_STATUS_CANCELED:
					$revokeResponse = MM_AccessControlEngine::revokeAccessForOrderItem($orderItem);
					break;
			}
			return new MM_PaymentServiceResponse();
		}		
		
		// neither order or recurring payment - this shouldn't ever happen
		else
		{
			return new MM_PaymentServiceResponse("Unrecognized Coinbase IPN type", MM_PaymentServiceResponse::$ERROR);
		}
		
	}
	
	
	/**
	 * Logs an IPN request. This is necessary for duplicate detection, potentially for troubleshooting,
	 * and for detecting # of times a subscription has been billed
	 * 
	 * @param object $request This is an object decoded from the JSON in the raw IPN POST data (null if invalid JSON) 
	 * @return MM_Response containing the id of the row in the IPN log table if successful, or an error message if failed
	 */
	protected function logIPN($request) 
	{
		global $wpdb;
		if (isset($request->order))
		{
			$insertData = array(
				"button_id" => $request->order->button->id,
				"button_type" => $request->order->button->type,
				"ipn_transaction_id" => $request->order->id,
				"ipn_type" => "order",
				"ipn_content" => file_get_contents("php://input"),
				"ipn_status" => $request->order->status,
				"received" => gmdate('Y-m-d H:i:s')
			);
		}
		elseif (isset($request->recurring_payment))
		{
			$insertData = array(
				"button_id" => $request->recurring_payment->button->id,
				"button_type" => $request->recurring_payment->button->type,
				"ipn_transaction_id" => $request->recurring_payment->id,
				"ipn_type" => "recurring_payment",
				"ipn_content" => file_get_contents("php://input"),
				"ipn_status" => $request->recurring_payment->status,
				"received" => gmdate('Y-m-d H:i:s')
			);
		}
		else
		{
			$insertData = array(
				"ipn_content" => file_get_contents("php://input"),
				"received" => gmdate('Y-m-d H:i:s'),
				"error" => ''
			);
		}

		$wpdb->insert(MM_TABLE_COINBASE_IPN_LOG,$insertData);
		return $wpdb->insert_id;
	}
	
	
	/**
	 * Detects whether this IPN has been received or not
	 * 
	 * @param array $request The IPN request.
	 * @return boolean true if this is a duplicate, false otherwise
	 */
	protected function isDuplicateIPN($request)
	{
		global $wpdb;
		$requestId = (isset($request->order->id))? $request->order->id : $request->recurring_payment->id;
		//try to acquire an ipn-specific lock; if no lock then another ipn for this item is already taking place
		$lockName = "mm_coinbase_ipn_lock-{$requestId}";		
		$lockAcquired = $wpdb->get_var($wpdb->prepare("SELECT COALESCE(GET_LOCK(%s,0),0)",$lockName));
		if ($lockAcquired == "1")
		{
			$isDuplicate = !is_null( $wpdb->get_row($wpdb->prepare("SELECT * FROM ".MM_TABLE_COINBASE_IPN_LOG." WHERE ipn_content=%s",file_get_contents('php://input'))) );
			$wpdb->query($wpdb->prepare("SELECT RELEASE_LOCK(%s)",$lockName));
		}
		else
		{
			$isDuplicate = true;
		}
		return $isDuplicate;
	}

	#########################################
	# FRONTEND
	#########################################
	
	/**
	 * Refunds the transaction with the supplied id if api credentials are present. If not, an error message directing the user to the
	 * Coinbase interface is returned
	 *
	 * @param integer $transactionId The MemberMouse transaction id
	 * @return MM_PaymentServiceResponse Representing the success or failure of the refund operation
	 */
	public function refundTransaction($transactionId)
	{
		$errorMessage = "Sorry, bitcoin transactions are non-reversible.";
		return new MM_PaymentServiceResponse($errorMessage,MM_PaymentServiceResponse::$ERROR);
	}


	/**
	 * Coinbase subscriptions are managed through their interface
	 * @see MM_PaymentService::cancelSubscription()
	 * 
	 * @param MM_OrderItem $orderItem The order item linked to the subscription to cancel
	 * @return MM_PaymentServiceResponse If express checkout cancellation fails or can't be done, this will have the error type with the error message directing the user to their Coinbase account
	 */
	public function cancelSubscription(MM_OrderItem $orderItem)
	{
		$coinbaseUrl = "https://coinbase.com/recurring_payments";
		$errorMessage = "To cancel this subscription, use the Coinbase interface at {$coinbaseUrl}";
		return new MM_PaymentServiceResponse($errorMessage,MM_PaymentServiceResponse::$ERROR);
	}

	
	/**
	 * Coinbase subscriptions are managed through their interface
	 * @see MM_PaymentService::updateSubscriptionInfo()
	 * 
	 * @param MM_OrderItem $orderItem The order item linked to the subscription to update
	 * @param MM_CardInfo $cardInfo (optional) The new credit card information to update the subscription with
	 * @param MM_CustomerAddress $billingAddress (optional) The new billing address to update the subscription with
	 * @return MM_PaymentServiceResponse For Coinbase, this will always be an error, with the error message directing the user to their Coinbase account
	 */
	public function updateSubscriptionInfo(MM_OrderItem $orderItem, MM_CardInfo $cardInfo=null, MM_CustomerAddress $billingAddress=null)
	{
		$coinbaseUrl = "https://coinbase.com/recurring_payments";
		$errorMessage = "To update payment information, use the Coinbase interface at {$coinbaseUrl}";
		return new MM_PaymentServiceResponse($errorMessage,MM_PaymentServiceResponse::$ERROR);
	}


	/**
	 * Redirect Coinbase return urls without the extra parameters Coinbase adds on since they trigger a WP_Query warning
	 * In the future this could be made to output a form with a js submit so that the parameters would be available to the end page without
	 * interfering with the WP GET query string mechanism.
	 * 
	 * Also, do check to make sure this user is paid up on their account.
	 */
	function doInitHook(){
		global $wpdb;
		if (isset($_GET['mm_coinbase_redirect']) && !empty($_GET['mm_coinbase_redirect']))
		{
			header("Location: $_GET[mm_coinbase_redirect]\r\n");
			exit;
		}
		if (is_user_logged_in() && !current_user_can('administrator') && !MM_Session::value("coinbase-checked"))
		{
			MM_Session::value("coinbase-checked",true);
			$user = new MM_User(get_current_user_id());
			$subscriptions = $user->getActiveMembershipSubscriptions();
			foreach($subscriptions as $sub)
			{
				$orderItem = new MM_OrderItem($sub["orderItemId"]);
				$order = new MM_Order($orderItem->getOrderId());
				// skip this check if it's not a coinbase handled payment
				if($order->getPaymentMethod()->getToken()!='COINBASE') continue;
				// get number of days since the most recent payment on this subscription
				$transSQL = "SELECT DATEDIFF(NOW(),ipn_log.received) FROM ".MM_TABLE_COINBASE_IPN_LOG." as ipn_log RIGHT JOIN ".MM_TABLE_COINBASE_BUTTON_LINKS." as button_links on ipn_log.button_id=button_links.button_id WHERE button_links.order_id=%d AND ipn_log.ipn_status=%s ORDER BY ipn_log.received DESC LIMIT 1";
				$daysSinceLastPayment = $wpdb->get_var($wpdb->prepare( $transSQL, $orderItem->getOrderId(), MM_CoinbaseService::$ORDER_STATUS_COMPLETED ));
				// get the maximum number of days that user should be able to go between payments
				$dayMultipliers = array('days'=>1,'weeks'=>7,'months'=>31,'years'=>365);
				$maxDaysBetweenPayments = $orderItem->getRebillPeriod() * $dayMultipliers[$orderItem->getRebillFrequency()];
				// if it's been more than the maximum # of days since the most recent payment, cancel the item
				if (is_null($daysSinceLastPayment) || $maxDaysBetweenPayments < $daysSinceLastPayment)
				{
					MM_AccessControlEngine::revokeAccessForOrderItem($orderItem);
					$orderItem->setStatus(MM_OrderItem::$STATUS_RECURRING_REBILL_FAILED);
					$orderItem->commitData();
				}
			}
		}
	}
	
}

