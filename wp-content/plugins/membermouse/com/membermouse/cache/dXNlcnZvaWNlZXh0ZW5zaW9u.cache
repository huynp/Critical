/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 *
 */
class MM_UserVoiceExtension extends MM_Extension
{	
	protected static $OPTION_ACTIVE = "active";
	protected static $OPTION_SUBDOMAIN = "subdomain";
	protected static $OPTION_SSO_KEY = "sso-key";
	protected static $OPTION_TEST_IP_ADDRESS = "test-ip-address";
	
	public function __construct($autoloadDependencies=false,$configData="") 
	{ 
		parent::__construct($autoloadDependencies,$configData);
		$this->token = MM_Extension::$USERVOICE_TOKEN;
	}
	
	public function doInitHook() 
	{
		if($this->isActive() && $this->hasPermission())
		{
			add_action("admin_head", array($this, "testUserVoiceSSO"));
			
			add_filter('mm_set_cookie', array($this, "setUserVoiceCookie"));
			add_filter('mm_login_redirect', array($this, "userVoiceSSO"));
			
			add_shortcode('MM_UserVoice_Link', array($this, "processUserVoiceShortcode"));
		}
	}
	
	public function isActive()
	{
		$isActive = $this->getOption(self::$OPTION_ACTIVE);
		
		return ($isActive == "on") && $this->hasPermission();
	}
	
	public function hasPermission() 
	{
		return (MM_MemberMouseService::hasPermission(MM_MemberMouseService::$EXTENSION_USERVOICE) == MM_MemberMouseService::$ACTIVE);
	}
	
	public function displayListingItem() 
	{
		$crntPage = MM_ModuleUtils::getPage();
		$userVoiceUrl = MM_ModuleUtils::getUrl($crntPage, MM_MODULE_EXTENSIONS)."&".MM_session::$PARAM_SUBMODULE."=".MM_Extension::$USERVOICE_TOKEN;
		?>
		<div class="mm-extension <?php echo $this->isActive() ? 'mm-extension-active' : ''; ?>">
		<a href="<?php echo $userVoiceUrl; ?>"><img src="https://dl.dropboxusercontent.com/u/265387542/plugin_images/logos/extensions-uv.jpg" /></a>
		</div>
		<?php
	}
	
	public function displayConfigScreen() 
	{ 
		$crntPage = MM_ModuleUtils::getPage();
		$userVoiceUrl = MM_ModuleUtils::getUrl($crntPage, MM_MODULE_EXTENSIONS)."&".MM_session::$PARAM_SUBMODULE."=".MM_Extension::$USERVOICE_TOKEN;
		?>
		
		<div style="background-color:#FFF; padding:10px; width:260px;">
			<img src="https://dl.dropboxusercontent.com/u/265387542/plugin_images/logos/extensions-uv.jpg" style="width:260px;" />
		</div>
		
		<div style="margin-bottom:15px;">
			<a href="http://membermouse.uservoice.com/knowledgebase/articles/333816" target="_blank">Need help configuring the UserVoice extension?</a>
		</div>
		
		<?php 
		if($this->hasPermission())
		{
			$dataSaved = false;
			$errors = "";
			
			if(isset($_POST["mm-uservoice-form"]))
			{
				$isActive = isset($_POST["mm-uservoice-active"]) ? $_POST["mm-uservoice-active"] : "";
				$uvSubdomain = isset($_POST["mm-uservoice-subdomain"]) ? $_POST["mm-uservoice-subdomain"] : "";
				$ssoKey = isset($_POST["mm-sso-key"]) ? $_POST["mm-sso-key"] : "";
				$testIPAddress = isset($_POST["mm-test-ip-address"]) ? $_POST["mm-test-ip-address"] : "";
				
				if($isActive == "on" && (empty($uvSubdomain) || empty($ssoKey)))
				{
					if(empty($uvSubdomain))
					{
						$errors .= "UserVoice Subdomain is required.\\n";	
					}
					
					if(empty($ssoKey))
					{
						$errors .= "SSO key is required.";
					}
				}
				else 
				{
					$this->setOption(self::$OPTION_ACTIVE, $isActive);
					$this->setOption(self::$OPTION_SUBDOMAIN, $uvSubdomain);
					$this->setOption(self::$OPTION_SSO_KEY, $ssoKey);
					$this->setOption(self::$OPTION_TEST_IP_ADDRESS, $testIPAddress);
					
					$dataSaved = true;
				}
			}

			$active = $this->getOption(self::$OPTION_ACTIVE);
			$uvSubdomain = $this->getOption(self::$OPTION_SUBDOMAIN);
			$ssoKey = $this->getOption(self::$OPTION_SSO_KEY);
			$testIPAddress = $this->getOption(self::$OPTION_TEST_IP_ADDRESS);
			?>
			
			<form method="post" action="">
			<input type="hidden" name="mm-uservoice-form" value="save" />
			<table style="width:520px; border-spacing: 10px; border-collapse: separate;">
			<tr>
				<td colspan="2">
					<div style="margin-bottom:10px;">
					<input type="checkbox" name="mm-uservoice-active" <?php echo ($this->isActive()) ? "checked" : ""; ?> /> Enable UserVoice Extension
					</div>
				</td>
			</tr>
			<tr>
				<td>UserVoice Subdomain</td>
				<td>
					<input type="text" name="mm-uservoice-subdomain" style="font-family: courier; font-size:11px; width:250px;" value="<?php echo $uvSubdomain; ?>" />
				</td>
			</tr>
			<tr>
				<td style="vertical-align:top;">SSO Key</td>
				<td valign="top">
					<input type="text" name="mm-sso-key" style="font-family: courier; font-size:11px; width:250px;" value="<?php echo $ssoKey; ?>" />
					
					<div style="margin-left:10px; margin-top: 5px; font-size:11px;">				
					SSO Sign-In URL: <code><?php echo MM_CorePageEngine::getUrl(MM_CorePageType::$LOGIN_PAGE); ?></code><br/>
					SSO Sign-Out URL: <code><?php echo MM_CorePageEngine::getUrl(MM_CorePageType::$LOGOUT_PAGE); ?></code>
					</div>
				</td>
			</tr>
			<tr>
				<td>Test IP Address (<em>optional</em>)</td>
				<td>
					<input type="text" name="mm-test-ip-address" style="font-family: courier; font-size:11px; width:250px;" value="<?php echo $testIPAddress; ?>" />
				</td>
			</tr>
			<tr>
				<td colspan="2" style="padding-top:10px;">
					<input type="submit" name="Submit" class="mm-ui-button blue" value="Save Configuration" />
				</td>
			</tr>
			</table>
			</form>
			
			<?php 
			if($this->isActive()) 
			{ 
				?>
				<h3 style="margin-top:30px;">Testing Your Configuration</h3>
				
				<p style="width:600px; font-size:12px;">
				You can test your configuration by clicking the button below. Ensure that you're logged out of your UserVoice 
				site prior to running a test. After running the test, the result should be that you're logged into your UserVoice 
				site as a user with the name <em>Test User</em>.
				</p>
				
				<a href="<?php echo $userVoiceUrl; ?>&test=true" target="_blank" class="mm-ui-button orange">Run Test</a>
				
				<h3 style="margin-top:30px;">Single Sign-On Links</h3>
				
				<p style="font-size:12px;">You can use the <code>[MM_UserVoice_Link]</code> to output a single sign-on link anywhere on your site as follows:</p>
				
				<pre>&lt;a href="[MM_UserVoice_Link]"&gt;Support Center&lt;/a&gt;</pre>
				<?php 
			}
			
			if($dataSaved)
			{
				?>
				<script>alert("Configuration saved successfully");</script>
				<?php
			}
			
			if(!empty($errors))
			{
				?>
				<script>alert("<?php echo $errors; ?>");</script>
				<?php
			}
			?>
			
			<p class="mm-section-header" style="font-size:20px !important; margin-top:20px; margin-bottom:20px;">MemberMouse Gadget</p>
			
			<img src="https://dl.dropboxusercontent.com/u/265387542/plugin_images/uservoice-gadget.png" 
				style="-moz-box-shadow: 0px 0px 3px 3px #ccc; -webkit-box-shadow: 0px 0px 3px 3px #ccc; box-shadow: 0px 0px 3px 3px #ccc; float:left;" />
  			
  			<p style="margin-left:200px;">Using the MemberMouse gadget allows you to see useful information about your members right from within 
  			UserVoice. Just click on any support case in UserVoice and as long as the email address is associated with a member on 
  			your MemberMouse site, their member information will show up in the MemberMouse gadget.</p>
  			
  			<p style="margin-left:200px;">To configure the MemberMouse gadget you'll need your MemberMouse site URL (<code><?php echo site_url(); ?></code>) and <a href="<?php echo MM_ModuleUtils::getUrl(MM_MODULE_DEVELOPER_TOOLS, MM_MODULE_API); ?>" target="_blank">API credentials</a>.</p>
  			
  			<p style="margin-left:200px; margin-top:20px;">
				<a href="http://membermouse.uservoice.com/knowledgebase/articles/392986" target="_blank" class="mm-ui-button green">Gadget Configuration Instructions</a>
			</p>
			<?php
		}
		else
		{
			?>
		 	<div id="message" class="error" style="padding:10px;">
				In order to use the UserVoice extension you must be on the Advanced plan or higher. You can upgrade your license by logging into your account on <a href="http://membermouse.com">membermouse.com</a> and going to the <em>My Account</em> page.
			</div>
		 	<?php 
		}
	}
	
	function processUserVoiceShortcode($atts)
	{
		$member = MM_SmartTagUtil::getCurrentUser();
		$uvSubdomain = $this->getOption(self::$OPTION_SUBDOMAIN, "");
	
		if($member->isValid())
		{
			$ssoToken = $this->generateUserVoiceSSOToken($member);
	
			return "//{$uvSubdomain}.uservoice.com/?sso={$ssoToken}";
		}
		else
		{
			return "//{$uvSubdomain}.uservoice.com/";
		}
	}
	
	public function generateUserVoiceSSOToken($member=null)
	{
		if(is_null($member) || (!is_null($member) && $member->isValid()))
		{
			$uvSubdomain = $this->getOption(self::$OPTION_SUBDOMAIN, "");
			$ssoKey = $this->getOption(self::$OPTION_SSO_KEY, "");
			
			if($this->isActive())
			{
				$salted = $ssoKey . $uvSubdomain;
				$hash = hash('sha1',$salted,true);
				$saltedHash = substr($hash,0,16);
				$iv = "OpenSSL for Ruby";
					
				$memberId = "";
				$memberName = "";
				$memberEmail = "";
					
				if(!is_null($member))
				{
					$memberId = $member->getId();
					$memberEmail = $member->getEmail();
					$firstName = $member->getFirstName();
					$lastName = $member->getLastName();
						
					if(!empty($firstName))
					{
						$memberName .= $firstName;
	
						if(!empty($lastName))
						{
							$memberName .= " ".substr($lastName, 0, 1);
						}
					}
				}
				else
				{
					$memberId = "1000";
					$memberName = "Test User";
					$memberEmail = "test@testuser.com";
				}
	
				$user_data = array(
						"guid" => $memberId,
						"display_name" => $memberName,
						"email" => $memberEmail,
						"url" => site_url()
				);
	
				$data = json_encode($user_data);
	
				// double XOR first block
				for ($i = 0; $i < 16; $i++)
				{
					$data[$i] = $data[$i] ^ $iv[$i];
				}
	
				$pad = 16 - (strlen($data) % 16);
				$data = $data . str_repeat(chr($pad), $pad);
	
				$cipher = mcrypt_module_open(MCRYPT_RIJNDAEL_128,'','cbc','');
				mcrypt_generic_init($cipher, $saltedHash, $iv);
				$encryptedData = mcrypt_generic($cipher,$data);
				mcrypt_generic_deinit($cipher);
	
				return urlencode(base64_encode($encryptedData));
			}
		}
	
		return "";
	}
	
	public function userVoiceSSO($infoObj)
	{
		$newUrl = "";
	
		$testIPAddress = $this->getOption(self::$OPTION_TEST_IP_ADDRESS, "");
		$crntIPAddress = $_SERVER["REMOTE_ADDR"];

		if(empty($testIPAddress) || (!empty($testIPAddress) && ($crntIPAddress == $testIPAddress)))
		{
			if(isset($infoObj->user->data->ID) && intval($infoObj->user->data->ID)>0)
			{
				$member = new MM_User($infoObj->user->data->ID);
	
				if($member->isValid())
				{
					// check if login request is coming from UserVoice
					if(MM_Cookies::getCookie("uv_login") == "1")
					{
						$uvSubdomain = $this->getOption(self::$OPTION_SUBDOMAIN, "");
						$ssoToken = $this->generateUserVoiceSSOToken($member);
							
						if($this->isActive())
						{
							$uvReturn = MM_Cookies::getCookie("return");
							$uvSSL = MM_Cookies::getCookie("uv_ssl");
								
							if($uvSSL == "1")
							{
								$newUrl = "https://";
							}
							else
							{
								$newUrl = "http://";
							}

							$newUrl .= "{$uvSubdomain}.uservoice.com{$uvReturn}?sso={$ssoToken}";
						}
					}
				}
			}
		}
		
		// clear cookies
		setcookie("mm_cookie_uv_login", "0", time()-3600);
		setcookie("mm_cookie_return", "0", time()-3600);
		setcookie("mm_cookie_uv_ssl", "0", time()-3600);
		setcookie("mm_cookie_uv_size", "0", time()-3600);
	
		return $newUrl;
	}
	
	public function setUserVoiceCookie($infoObj)
	{
		if(!empty($infoObj->key) && isset($infoObj->value))
		{			
			switch($infoObj->key)
			{
				case "uv_login":
				case "return":
				case "uv_ssl":
				case "uv_size":
					setcookie(MM_Cookies::$COOKIE_PREFIX.$infoObj->key, $infoObj->value, 0, "/");
					return false;
					break;
			}
		}
		
		return true;
	}
	
	public function testUserVoiceSSO()
	{
		if(isset($_GET["test"]) && $_GET["test"] == "true")
		{
			$uvSubdomain = $this->getOption(self::$OPTION_SUBDOMAIN, "");
			$ssoToken = $this->generateUserVoiceSSOToken();
	
			if($this->isActive())
			{
				echo "<script>window.location = \"//{$uvSubdomain}.uservoice.com/?sso={$ssoToken}\";</script>";
			}
		}
	}
}
